# GenerateParser steps

parameters:
- name: SubFolder
  default: 's'

steps:

- bash: |
    cd $(Agent.BuildDirectory)/${{ parameters.SubFolder }}
    bash scripts/BuildMetaDigest.sh Release
  displayName: 'Build Metamodel Digest'

- bash: |
    cd $(Agent.BuildDirectory)/${{ parameters.SubFolder }}
    bash scripts/BuildCodeGenerator.sh Release
  displayName: 'Build Code Generator'

- bash: |
    cd $(Agent.BuildDirectory)/${{ parameters.SubFolder }}
    bash scripts/BuildParserGen.sh Release
  displayName: 'Build Parser Generator'

- bash: |
    cd $(Agent.BuildDirectory)/${{ parameters.SubFolder }}
    bash scripts/GenerateParser.sh Release
  displayName: 'Generate Parser'

- bash: |
    cd $(Agent.BuildDirectory)/${{ parameters.SubFolder }}
    bash scripts/BuildTestGen.sh Release
  displayName: 'Build Unit Test Generator'

- bash: |
    cd $(Agent.BuildDirectory)/${{ parameters.SubFolder }}
    bash scripts/GenerateParserTests.sh Release
  displayName: 'Generate ParserUnitTest'

- bash: |
    cd $(Agent.BuildDirectory)/${{ parameters.SubFolder }}
    bash scripts/BuildRemodelGen.sh Release
  displayName: 'Build Remodel Generator'

- bash: |
    cd $(Agent.BuildDirectory)/${{ parameters.SubFolder }}
    bash scripts/GenerateRemodelTool.sh Release
  displayName: 'Generate Remodel Tool'

- bash: |
    cd $(Agent.BuildDirectory)/${{ parameters.SubFolder }}
    bash scripts/BuildTutorialExtractor.sh Release
  displayName: 'Build Tutorial Extractor'

- bash: |
    cd $(Agent.BuildDirectory)/${{ parameters.SubFolder }}
    bash scripts/ExtractTutorials.sh Release
  displayName: 'Extract Tutorial Projects'

- bash: |
    cd $(Agent.BuildDirectory)/${{ parameters.SubFolder }}
    nuget install docfx.console
  displayName: 'Install DocFx'

- bash: |
    cd $(Agent.BuildDirectory)/${{ parameters.SubFolder }}
    DocFxFolder=$(ls -d docfx*)
    bash scripts/RunDocFx.sh Release "mono $DocFxFolder/tools/"
  displayName: 'Write API Documentation'

- bash: |
    cd $(Agent.BuildDirectory)/${{ parameters.SubFolder }}
    bash scripts/BuildFlowTracer.sh Release
  displayName: 'Build Flow Tracer'

- bash: |
    cd $(Agent.BuildDirectory)/${{ parameters.SubFolder }}
    sudo apt-get install graphviz
  displayName: 'Install Graphviz'

- bash: |
    cd $(Agent.BuildDirectory)/${{ parameters.SubFolder }}
    bash scripts/TraceFlow.sh Release
  displayName: 'Trace Flow'
